import pandas as pdimport numpy as npfrom pandas import DataFrameimport datetimefrom scipy.stats import mstatsimport matplotlib.pyplot as pltportamount=2000000000t=22df = pd.read_csv('//ntc-fls-06/eq_domestic/上場株式/USERS/Shao/Data/TPXBenchmark/backtestdata_return_compare_tpx.csv', encoding="shift-jis")df=df[['Code','Day','Return','VL','Margin','Cal_Price','Price','Losh','Industry','Return_Tpx']]df=df.sort_index(by=["Code","Day"],ascending=True)df['Return_Cal']=1+df.Return/100df['Amount']=df.VL*df.Cal_Price*0.05func1=lambda x: pd.rolling_apply(x,t,lambda x : x.prod())func2=lambda x : mstats.winsorize(x,limits=[0.02,0.02])df['Return_Month']=df.groupby('Code')['Return_Cal'].apply(func1)df['Amount_Return']=df.groupby('Code')['Amount'].apply(pd.rolling_mean,t)df['Return_Month']=df.groupby(['Day','Industry'])['Return_Month'].transform(func2)avg=df.groupby(['Day','Industry'])['Return_Month'].mean()avg=avg.reset_index()avg=avg.rename(columns={"Return_Month":"Avg"})std=df.groupby(['Day','Industry'])['Return_Month'].std()std=std.reset_index()std=std.rename(columns={"Return_Month":"Std"})dr=pd.merge(df,avg,on=['Day','Industry'])dr=pd.merge(dr,std,on=['Day','Industry'])dr=dr.sort_index(by=["Code","Day"],ascending=True)dr['Alpha']=(dr.Return_Month-dr.Avg)/dr.Stddr['Position']=dr.groupby(['Day','Industry'])['Alpha'].transform(func2)dr.loc[((dr.Price<=200) & (dr.Position>=-2) & (dr.Position<=2)),'Position']=0dr.loc[((dr.Margin==3) & (dr.Position>=0)),'Position']=0dr.loc[((dr.Position>-0.5) & (dr.Position<0.5)),'Position']=0for y in np.unique(dr.Day):    dr1=dr[dr.Day==y]    num1=dr1.Position[dr1.Position>0].sum()    num2=dr1.Position[dr1.Position<0].sum()    dr1.Position[dr1.Position>0]=dr1.Position[dr1.Position>0]/num1*portamount    dr1.Position[dr1.Position<0]=-dr1.Position[dr1.Position<0]/num2*portamount    df1=dr1[dr1.Position>=0]    df2=dr1[dr1.Position<0]    for x in range(10):        df1.Position=df1.Position-df1['Amount']        df1.Position[df1.Position>0]=0        df1.Position=df1.Position+df1['Amount']        num3=df1.Position[df1.Position>0].sum()        df1.Position[df1.Position>0]=df1.Position[df1.Position>0]+(portamount-num3)/df1.Position[df1.Position>0].count()        df2.Position=df2.Position+df2['Amount']        df2.Position[df2.Position<0]=0        df2.Position=df2.Position-df2['Amount']        num4=df2.Position[df2.Position<0].sum()        df2.Position[df2.Position<0]=df2.Position[df2.Position<0]-(portamount+num4)/df2.Position[df2.Position<0].count()    dr1[dr1.Position>=0]=df1    dr1[dr1.Position<0]=df2    dr[dr.Day==y]=dr1dr.to_csv("data_chged_1w.csv")dr=dr.sort_index(by=["Code","Day"],ascending=True)dr['Position_chg']=dr['Position']-dr['Position'].shift(1)dr['Cost']=0.0005*np.abs(dr['Position_chg'])dr['Cost_Position']=np.abs(dr['Position_chg'])dr['PL']=-dr.Position*dr.Return.shift(-1)/100dr_Long=dr[dr.Position<0]dr_Short=dr[dr.Position>0]dr_Long_PL=dr_Long.groupby('Day')['Position','PL','Cost'].sum()dr_Short_PL=dr_Short.groupby('Day')['Position','PL','Cost'].sum()dr_PL=dr.groupby('Day')['Position','PL','Cost','Cost_Position'].sum()dr_Long_PL['PL_Cost']=dr_Long_PL.PL-dr_Long_PL.Costdr_Short_PL['PL_Cost']=dr_Short_PL.PL-dr_Short_PL.Costdr_PL['PL_Cost']=dr_PL.PL-dr_PL.Costdr_Long_PL['PL_Long_Cumsum']=dr_Long_PL.PL.cumsum()dr_Short_PL['PL_Short_Cumsum']=dr_Short_PL.PL.cumsum()dr_PL['PL_Cumsum']=dr_PL.PL.cumsum()dr_Long_PL['PL_Long_Cost_Cumsum']=dr_Long_PL.PL_Cost.cumsum()dr_Short_PL['PL_Short_Cost_Cumsum']=dr_Short_PL.PL_Cost.cumsum()dr_PL['PL_Cost_Cumsum']=dr_PL.PL_Cost.cumsum()plt.plot(np.array(dr_PL['PL_Cost_Cumsum']))plt.plot(np.array(dr_PL['PL_Cumsum']))    
